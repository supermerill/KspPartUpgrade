//////////////////////////////////////////////////////////////////////
// Example of ModuleManager conf to upgrade LV-T15 with UpgradePart
// Author : Merill
// Licence: CC-BY-SA
//////////////////////////////////////////////////////////////////////

//stub part to show on the tech tree but not in the vab.
+PART[liquidEngine]
{
	//new name, title & descrioption
	@name = liquidEngineStubGeneralRocketry
	@title = LV-T30 Upgrade num 1
	@description = Reduce the mass to 1.5t, increased the heat resitance to 1200°K, improve the isp by 20-30 and the thrust of the engine by 15. Add also an alternator.
	//select tech node
	@TechRequired = generalRocketry
	//do not show in vab
	@category = none
	
	//add all upgrades
	@mass = 1.5
	@maxTemp = 1200
	@cost = 1000
	@MODULE[ModuleEngines*]
	{
		minThrust = 0
		@maxThrust = 215
		
		@atmosphereCurve
		{
			@key,0 = 0 310
			@key,1 = 1 260
		}
	}
	@MODULE[ModuleAlternator]
	{
		@RESOURCE[ElectricCharge]
		{
			rate = 3
		}
	}
}
+PART[liquidEngine]
{
	@name = liquidEngineStubAdvRocketry
	@title = LV-T30 Upgrade num 2
	@description = Reduce the mass to 1.25t, increased the heat resitance to 1500°K, improve the isp by 20 and the thrust of the engine by 15. Improve also the alternator and add a gimbal module.
	@TechRequired = advRocketry
	@category = none
	@mass = 1.25
	@maxTemp = 1500
	@cost = 900
	@MODULE[ModuleEngines*]
	{
		minThrust = 0
		@maxThrust = 230
		
		@atmosphereCurve
		{
			@key,0 = 0 330
			@key,1 = 1 280
		}
	}
	@MODULE[ModuleAlternator]
	{
		@RESOURCE[ElectricCharge]
		{
			rate = 7
		}
	}
}
+PART[liquidEngine]
{
	@name = liquidEngineStubHeavyRocketry
	@title = LV-T30 Upgrade num 3
	@description = Reduce the mass to 1t, increased the heat resitance to 2000°K, improve the isp by 20 and the thrust of the engine by 20. Improve also the alternator and the gimbal module.
	@TechRequired = heavyRocketry
	@category = none
	@mass = 1
	@maxTemp = 2000
	@cost = 800
	@MODULE[ModuleEngines*]
	{
		minThrust = 0
		@maxThrust = 250
		
		@atmosphereCurve
		{
			@key,0 = 0 350350
			@key,1 = 1 300
		}
	}
	MODULE
	{
		name = ModuleGimbal
		gimbalTransformName = thrustTransform
		gimbalRange = 1
		useGimbalResponseSpeed = true
		gimbalResponseSpeed = 5
	}
	@MODULE[ModuleAlternator]
	{
		@RESOURCE[ElectricCharge]
		{
			rate = 10
		}
	}
}

//Here, modifying the LV-T15 part
@PART[liquidEngine]
{
	//initial values for mass, maxttemp, alternator and engine lower than default
	@mass = 2
	@maxTemp = 1000
	
	//remove this module, it's added in an upgrade.
	!MODULE[ModuleAlternator]{}
	
	@MODULE[ModuleEngines*]
	{
		minThrust = 0
		@maxThrust = 200
		
		@atmosphereCurve
		{
			@key,0 = 0 280
			@key,1 = 1 240
		}
	}
	//module to upgrade the mass
	//if multiple tech in the list have been researched, the only one used is the last in this list.
	// when a vessel load, this module restore his last mass (because it shouldn't upgrade)
	MODULE
	{
		name = ModuleUpgradeMass
		
		//if you have problems with data persistance, you can set this field to false, to make part in flight magically upgrades when you research a new tech.
		//persitance = true //default true
		
		//list of techName / value to set
		TECH-VALUE
		{
			generalRocketry = 1.5
			advRocketry = 1.25
			heavyRocketry = 1
		}
		// example: if generalRocketry and heavyRocketry are researched, The lv-t15 mass value will be the one of heavyRocketry because it's below in the list.
	}
	//same as the mass, but change the max temp value
	MODULE
	{
		name = ModuleUpgradeMaxTemp
		TECH-VALUE
		{
			generalRocketry = 1200
			advRocketry = 1500
			heavyRocketry = 2000
		}
	}
	//same as the mass, but change the cost value
	MODULE
	{
		name = ModuleUpgradeCost
		TECH-VALUE
		{
			generalRocketry = 1000
			advRocketry = 900
			heavyRocketry = 800
		}
	}
	//module to upgrade engine (in a more easy way than ModuleUpgradeModule)
	MODULE
	{
		name = ModuleUpgradeEngine
		//Here, it's a list of an other type of "TECH-VALUE"
		// each TECH-VALUE node contain an upgrade at a tech level.
		// like ModuleUpgradeMass, only the last researched is taken.
		TECH-VALUE
		{
			tech = generalRocketry
			// the min/max thrust is considered with vaccum isp => it give the min/max fuel flow.
			minThrust = 0
			maxThrust = 215
			atmosphereIsp = 260
			vacuumIsp = 310
		}
		TECH-VALUE
		{
			tech = advRocketry
			minThrust = 0
			maxThrust = 230
			atmosphereIsp = 280
			vacuumIsp = 330
		}
		TECH-VALUE
		{
			tech = heavyRocketry
			minThrust = 0
			maxThrust = 250
			atmosphereIsp = 300
			vacuumIsp = 350
		}
	}
	
	//this module is designed to upgrade other modules
	//It's more compicated, and maybe i change it in a future day.
	// right now, you should create a new module for each type/tech combinaison
	// note: Please, do not add multiple module with the same name to your part, i can only upgrade one of them.
	MODULE
	{
		name = ModuleUpgradeModule
		 //module upgrade type : create, replace or delete.
		type = create
		//tech needed to apply this upgrade
		tech = generalRocketry
		//If you want to use multiple ModuleUpgradeModule on this part with the same type/tech, add this field with a unique int id
		//id = 144124
		//add all modules to [add|replace|delete] here. As it's defined in a normal part.
		MODULE
		{
			name = ModuleAlternator
			RESOURCE
			{
				name = ElectricCharge
				rate = 3
			}
		}
	}
	//if you want to upgrace a upgrade-created modle, it must be place AFTER the creation one.
	MODULE
	{
		name = ModuleUpgradeModule
		type = replace
		tech = advRocketry
		MODULE
		{
			name = ModuleAlternator
			RESOURCE
			{
				name = ElectricCharge
				rate = 7
			}
		}
	}
	MODULE
	{
		name = ModuleUpgradeModule
		type = create
		tech = advRocketry
		
		//In ModuleUpgradeModule, vessel-persisted fields must have a type in {primitif | string | vector[3|3d|4] | Color[32] | Matrix4x4 | Quaternion[D]}
		//	other fields are ignored.
		//persitance = true //default true
		
		MODULE
		{
			name = ModuleGimbal
			gimbalTransformName = thrustTransform
			gimbalRange = 0.5
			useGimbalResponseSpeed = true
			gimbalResponseSpeed = 2
		}
	}
	MODULE
	{
		name = ModuleUpgradeModule
		type = replace
		tech = heavyRocketry
		MODULE
		{
			name = ModuleGimbal
			gimbalTransformName = thrustTransform
			gimbalRange = 1
			useGimbalResponseSpeed = true
			gimbalResponseSpeed = 5
		}
		//you can upgrade multiple modules
		MODULE
		{
			name = ModuleAlternator
			RESOURCE
			{
				name = ElectricCharge
				rate = 10
			}
		}
	}
}


